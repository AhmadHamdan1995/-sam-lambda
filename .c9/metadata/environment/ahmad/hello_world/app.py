{"filter":false,"title":"app.py","tooltip":"/ahmad/hello_world/app.py","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"remove","lines":["import json","","# import requests","","","def lambda_handler(event, context):","    \"\"\"Sample pure Lambda function","","    Parameters","    ----------","    event: dict, required","        API Gateway Lambda Proxy Input Format","","        Event doc: https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html#api-gateway-simple-proxy-for-lambda-input-format","","    context: object, required","        Lambda Context runtime methods and attributes","","        Context doc: https://docs.aws.amazon.com/lambda/latest/dg/python-context-object.html","","    Returns","    ------","    API Gateway Lambda Proxy Output Format: dict","","        Return doc: https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html","    \"\"\"","","    # try:","    #     ip = requests.get(\"http://checkip.amazonaws.com/\")","    # except requests.RequestException as e:","    #     # Send some context about this error to Lambda Logs","    #     print(e)","","    #     raise e","","    return {","        \"statusCode\": 200,","        \"body\": json.dumps({","            \"message\": \"hello world\",","            # \"location\": ip.text.replace(\"\\n\", \"\")","        }),","    }",""],"id":20}],[{"start":{"row":0,"column":0},"end":{"row":57,"column":0},"action":"insert","lines":["import base64","import boto3","import json","import os","import random","","def lambda_handler(event, context):","    # إعداد عملاء AWS","    bedrock_client = boto3.client(\"bedrock-runtime\", region_name=\"us-east-1\")","    s3_client = boto3.client(\"s3\")","    ","    # الحصول على المعطيات من متغيرات البيئة","    model_id = \"amazon.titan-image-generator-v1\"","    bucket_name = os.environ[\"BUCKET_NAME\"]","    candidate_number = os.environ.get(\"CANDIDATE_NUMBER\", \"default\")","    ","    # الحصول على prompt من محتوى HTTP Body","    try:","        body = json.loads(event[\"body\"])","        prompt = body[\"prompt\"]","    except (KeyError, TypeError, json.JSONDecodeError):","        return {","            \"statusCode\": 400,","            \"body\": json.dumps({\"error\": \"Invalid request, 'prompt' is required in JSON body.\"})","        }","    ","    # توليد مسار فريد للصورة","    seed = random.randint(0, 2147483647)","    s3_image_path = f\"{candidate_number}/generated_images/titan_{seed}.png\"","","    # إعداد طلب Bedrock","    native_request = {","        \"taskType\": \"TEXT_IMAGE\",","        \"textToImageParams\": {\"text\": prompt},","        \"imageGenerationConfig\": {","            \"numberOfImages\": 1,","            \"quality\": \"standard\",","            \"cfgScale\": 8.0,","            \"height\": 1024,","            \"width\": 1024,","            \"seed\": seed,","        }","    }","","    # استدعاء نموذج Bedrock","    response = bedrock_client.invoke_model(modelId=model_id, body=json.dumps(native_request))","    model_response = json.loads(response[\"body\"].read())","    base64_image_data = model_response[\"images\"][0]","    ","    # فك تشفير الصورة وتحميلها إلى S3","    image_data = base64.b64decode(base64_image_data)","    s3_client.put_object(Bucket=bucket_name, Key=s3_image_path, Body=image_data)","    ","    return {","        \"statusCode\": 200,","        \"body\": json.dumps({\"image_url\": f\"s3://{bucket_name}/{s3_image_path}\"})","    }",""],"id":21}],[{"start":{"row":11,"column":0},"end":{"row":12,"column":0},"action":"remove","lines":["    # الحصول على المعطيات من متغيرات البيئة",""],"id":22}],[{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"remove","lines":["    # إعداد عملاء AWS",""],"id":23}],[{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"remove","lines":["    # الحصول على prompt من محتوى HTTP Body",""],"id":24}],[{"start":{"row":23,"column":0},"end":{"row":24,"column":0},"action":"remove","lines":["    # توليد مسار فريد للصورة",""],"id":25}],[{"start":{"row":26,"column":0},"end":{"row":27,"column":0},"action":"remove","lines":["    # إعداد طلب Bedrock",""],"id":26}],[{"start":{"row":39,"column":0},"end":{"row":40,"column":0},"action":"remove","lines":["    # استدعاء نموذج Bedrock",""],"id":27}],[{"start":{"row":43,"column":0},"end":{"row":44,"column":0},"action":"remove","lines":["    # فك تشفير الصورة وتحميلها إلى S3",""],"id":28}]]},"ace":{"folds":[],"scrolltop":88.79999999999998,"scrollleft":0,"selection":{"start":{"row":14,"column":8},"end":{"row":14,"column":8},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":4,"state":"start","mode":"ace/mode/python"}},"timestamp":1731508009891,"hash":"11bfea7796102a4e3491d38b705b18f3e616e245"}